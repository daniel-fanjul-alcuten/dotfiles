#!/bin/bash
set -e

umask 027

while getopts "n:u:lem:s:t" opt; do
  case $opt in
    n) name="$OPTARG";;
    u) uuid="$OPTARG";;
    l) luks=true;;
    e) ext=true;;
    m) mounts="$OPTARG";;
    s) s3ql="$OPTARG";;
    t) mtp=true;;
    *) exit 1;;
  esac
done
shift $((OPTIND - 1))

source ~/etc/colors.cfg

mount_point=/media/"$name"
if sudo mountpoint -q "$mount_point"; then
  green "$name: already mounted"
fi

if [ "$uuid" ]; then
  device=/dev/disk/by-uuid/"$uuid"
  if ! [ -b "$device" ]; then
    red "$name: not found"
  fi

  if [ "$luks" ]; then
    mapper=/dev/mapper/"$name"
    if ! [ -h "$mapper" ]; then
      echo -n "$name: "
      if ! sudo cryptsetup luksOpen "$device" "$name"; then
        red "$name: luks open failed"
      fi
    fi
    device="$mapper"
  fi

  mount=mount
  mount_options=''
  if [ "$ext" ]; then
    mount_options='-o noatime'

    if ! sudo e2fsck "$device"; then
      red "$name: fsck failed"
    fi

    if ! sudo tune2fs -L "$name" "$device"; then
      red "$name: label tuning failed"
    fi

    if [ "$mounts" ]; then
      if ! sudo tune2fs -c "$mounts" "$device"; then
        red "$name: max mounts tuning failed"
      fi
    fi

    echo $(($mounts - `sudo tune2fs -l /dev/mapper/"$name" | grep '^Mount count' | cut -c 27-`)) mounts

  fi

elif [ "$s3ql" ]; then
  device="$s3ql"
  mount=mount.s3ql
  mount_options='--compress bzip2 --allow-other'

  case "$s3ql" in
    local://*)
      if ! sudo fsck.s3ql "$s3ql"; then
        red "$name: fsck.s3ql failed"
      fi
  esac

elif [ "$mtp" ]; then
  device=""
  mount=mtpfs
  mount_options='-o allow_other'
fi

if ! sudo mkdir -p "$mount_point"; then
  red "$name: mkdir failed"
fi

if ! sudo ln -sfn "$mount_point" /"$name"; then
  red "$name: ln -s failed"
fi

if ! sudo $mount $mount_options $device "$mount_point"; then
  red "$name: $mount failed"
fi

if [ -d "$mount_point"/.git ]; then
  (cd "$mount_point" && {
    if `which git-fsck-and-gc >&/dev/null`; then
      git-fsck-and-gc
    fi
  })
fi

blue "$name: mounted"
