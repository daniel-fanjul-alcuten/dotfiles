#!/bin/bash
set -x
set -e
set -o pipefail

unset s
unset e
while getopts 'se' opt; do
  case $opt in
    s)
      s=true;;
    e)
      e=true;;
    *)
      exit 1;;
  esac
done
shift $((OPTIND - 1))

origin="$1" && shift
target="$1" && shift

whoami=$(whoami)
hostname=$(hostname)

cmd="duplicity -vi --gpg-binary $(which gpg2) --exclude-other-filesystems --asynchronous-upload"
if [ "$s" ]; then
  cmd="sudo SSH_AUTH_SOCK=\"$SSH_AUTH_SOCK\" GPG_AGENT_INFO=\"~/.gnupg/S.gpg-agent\" $cmd"
fi
if [ "$e" ]; then
  cmd="$cmd --use-agent --encrypt-key \"<$whoami@$hostname>\" --sign-key \"<$whoami@$hostname>\""
else
  cmd="$cmd --no-encryption"
fi
eval nice ionice -c 3 "$cmd" "$@" \""$origin"\" \""$target"\"

cmd="duplicity cleanup -vi --gpg-binary $(which gpg2) --force"
if [ "$s" ]; then
  cmd="sudo SSH_AUTH_SOCK=\"$SSH_AUTH_SOCK\" GPG_AGENT_INFO=\"~/.gnupg/S.gpg-agent\" $cmd"
fi
if [ "$e" ]; then
  cmd="$cmd --use-agent --encrypt-key \"<$whoami@$hostname>\" --sign-key \"<$whoami@$hostname>\""
else
  cmd="$cmd --no-encryption"
fi
eval nice ionice -c 3 "$cmd" "$target"

cmd="duplicity remove-older-than 13W -vi --gpg-binary $(which gpg2)"
if [ "$s" ]; then
  cmd="sudo SSH_AUTH_SOCK=\"$SSH_AUTH_SOCK\" GPG_AGENT_INFO=\"~/.gnupg/S.gpg-agent\" $cmd"
fi
if [ "$e" ]; then
  cmd="$cmd --use-agent --encrypt-key \"<$whoami@$hostname>\" --sign-key \"<$whoami@$hostname>\""
else
  cmd="$cmd --no-encryption"
fi
eval nice ionice -c 3 "$cmd" "$target"
