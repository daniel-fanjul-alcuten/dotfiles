#!/bin/bash
set -e

unset postponed
while getopts 'p' opt; do
  case $opt in
    p) postponed=true;;
    *) exit 1
  esac
done
shift $((OPTIND - 1))

dir=$(git rev-parse --show-toplevel)
if [ -z "$dir" ]; then
  dir=$(git rev-parse --git-dir)
  dir=$(readlink -e "$dir")
fi

if [ -z "$postponed" ]; then
  mkdir -p ~/var/{lock,log}
  lock=git-fsck-and-gc-$(md5sum <<< "$dir" | cut -f 1 -d ' ')
  nohup postpone -l ~/var/lock/lock-"$lock" -L ~/var/lock/elock-git-fsck-and-gc "$0" -p &>> ~/var/log/"$lock".log &
  exit 0
fi
set -x

source ~/etc/colors.cfg

function ok {
  blue "$@"
}

function ko {
  red "$@"
  exit 1
}

now="$(date +%s)"
if [ "$(git config gc.lastfsck || echo 0)" -lt $((now - $((3 * 24 * 3600)))) ]; then
  if git fsck; then
    git config gc.lastfsck "$now"
    ok "$dir: git fsck ok"
  else
    ko "$dir: git fsck failed"
  fi
fi

if [ "$(git config gc.lastgc || echo 0)" -lt $((now - $((5 * 24 * 3600)))) ]; then
  if git gc --auto; then
    git config gc.lastgc "$now"
    ok "$dir: git gc --auto ok"
  else
    ko "$dir: git gc --auto failed"
  fi
fi

if [ "$(git config gc.lastgcaggressive || echo 0)" -lt $((now - $((31 * 24 * 3600)))) ]; then
  if git gc --aggressive; then
    git config gc.lastgcaggressive "$now"
    ok "$dir: git gc --aggressive ok"
  else
    ko "$dir: git gc --aggressive failed"
  fi
fi

